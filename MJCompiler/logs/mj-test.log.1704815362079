INFO  16:49:08,425 - Compiling source file: C:\Users\Administrator\Desktop\njihovProjekat\workspace\MJCompiler\test\test301.mj
INFO  16:49:08,479 - #2 program
INFO  16:49:08,479 - #43 test301
INFO  16:49:08,479 - #48 namespace
INFO  16:49:08,480 - #43 Konstante
INFO  16:49:08,480 - #3 {
INFO  16:49:08,481 - #21 const
INFO  16:49:08,482 - #43 int
INFO  16:49:08,482 - #43 nula
INFO  16:49:08,482 - #11 =
INFO  16:49:08,482 - #40 0
INFO  16:49:08,482 - #5 ;
INFO  16:49:08,482 - #21 const
INFO  16:49:08,483 - #43 int
INFO  16:49:08,483 - #43 jedan
INFO  16:49:08,483 - #11 =
INFO  16:49:08,483 - #40 1
INFO  16:49:08,483 - #5 ;
INFO  16:49:08,483 - #21 const
INFO  16:49:08,483 - #43 int
INFO  16:49:08,483 - #43 pet
INFO  16:49:08,484 - #11 =
INFO  16:49:08,484 - #40 5
INFO  16:49:08,484 - #5 ;
INFO  16:49:08,484 - #4 }
INFO  16:49:08,485 - #48 namespace
INFO  16:49:08,485 - #43 Nizovi
INFO  16:49:08,485 - #3 {
INFO  16:49:08,486 - #43 int
INFO  16:49:08,486 - #43 niz
INFO  16:49:08,486 - #19 [
INFO  16:49:08,486 - #20 ]
INFO  16:49:08,486 - #5 ;
INFO  16:49:08,486 - #43 char
INFO  16:49:08,486 - #43 nizch
INFO  16:49:08,487 - #19 [
INFO  16:49:08,487 - #20 ]
INFO  16:49:08,487 - #5 ;
INFO  16:49:08,488 - #43 char
INFO  16:49:08,488 - #43 a
INFO  16:49:08,488 - #5 ;
INFO  16:49:08,488 - #3 {
INFO  16:49:08,488 - #4 }
INFO  16:49:08,489 - #4 }
INFO  16:49:08,489 - #43 int
INFO  16:49:08,489 - #43 a
INFO  16:49:08,489 - #5 ;
INFO  16:49:08,490 - #3 {
INFO  16:49:08,490 - #12 void
INFO  16:49:08,490 - #43 main
INFO  16:49:08,490 - #6 (
INFO  16:49:08,490 - #7 )
INFO  16:49:08,491 - #43 int
INFO  16:49:08,492 - #43 bodovi
INFO  16:49:08,492 - #5 ;
INFO  16:49:08,492 - #43 bool
INFO  16:49:08,493 - #43 bt
INFO  16:49:08,493 - #5 ;
INFO  16:49:08,493 - #3 {
INFO  16:49:08,493 - #43 bodovi
INFO  16:49:08,494 - #11 =
INFO  16:49:08,495 - #40 0
INFO  16:49:08,496 - #5 ;
INFO  16:49:08,497 - #43 Nizovi
INFO  16:49:08,497 - #16 :
INFO  16:49:08,497 - #16 :
INFO  16:49:08,497 - #43 a
INFO  16:49:08,498 - #11 =
INFO  16:49:08,498 - #41 a
INFO  16:49:08,498 - #5 ;
INFO  16:49:08,498 - #43 a
INFO  16:49:08,498 - #11 =
INFO  16:49:08,498 - #40 10
INFO  16:49:08,499 - #5 ;
INFO  16:49:08,499 - #9 print
INFO  16:49:08,499 - #6 (
INFO  16:49:08,499 - #43 a
INFO  16:49:08,499 - #24 +
INFO  16:49:08,499 - #40 2
INFO  16:49:08,500 - #8 ,
INFO  16:49:08,500 - #40 10
INFO  16:49:08,500 - #7 )
INFO  16:49:08,501 - #5 ;
INFO  16:49:08,501 - #4 }
INFO  16:49:08,501 - #4 }
INFO  16:49:08,508 - Program(
  ProgName(
   test301
  ) [ProgName]
  NameSpaceL(
    NameSpaceL(
      NoName(
      ) [NoName]
      NameSpaceSamo(
        NameSp(
         Konstante
        ) [NameSp]
        ConstDeclarations(
          ConstDeclarations(
            ConstDeclarations(
              NoDeclarations(
              ) [NoDeclarations]
              ConstDcl(
                SamoType(
                 int
                ) [SamoType]
                ConstElemSingle(
                  ConstElemm(
                   nula
                    NConst(
                     0
                    ) [NConst]
                  ) [ConstElemm]
                ) [ConstElemSingle]
              ) [ConstDcl]
            ) [ConstDeclarations]
            ConstDcl(
              SamoType(
               int
              ) [SamoType]
              ConstElemSingle(
                ConstElemm(
                 jedan
                  NConst(
                   1
                  ) [NConst]
                ) [ConstElemm]
              ) [ConstElemSingle]
            ) [ConstDcl]
          ) [ConstDeclarations]
          ConstDcl(
            SamoType(
             int
            ) [SamoType]
            ConstElemSingle(
              ConstElemm(
               pet
                NConst(
                 5
                ) [NConst]
              ) [ConstElemm]
            ) [ConstElemSingle]
          ) [ConstDcl]
        ) [ConstDeclarations]
        NoMtn(
        ) [NoMtn]
      ) [NameSpaceSamo]
    ) [NameSpaceL]
    NameSpaceSamo(
      NameSp(
       Nizovi
      ) [NameSp]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoDeclarations(
            ) [NoDeclarations]
            VarDeclaration(
              SamoType(
               int
              ) [SamoType]
              VarElem(
                VarArrayElem(
                 niz
                ) [VarArrayElem]
              ) [VarElem]
            ) [VarDeclaration]
          ) [VarDeclarations]
          VarDeclaration(
            SamoType(
             char
            ) [SamoType]
            VarElem(
              VarArrayElem(
               nizch
              ) [VarArrayElem]
            ) [VarElem]
          ) [VarDeclaration]
        ) [VarDeclarations]
        VarDeclaration(
          SamoType(
           char
          ) [SamoType]
          VarElem(
            VarSingleElem(
             a
            ) [VarSingleElem]
          ) [VarElem]
        ) [VarDeclaration]
      ) [VarDeclarations]
      Mtn(
        NoMethodDecl(
        ) [NoMethodDecl]
      ) [Mtn]
    ) [NameSpaceSamo]
  ) [NameSpaceL]
  VarDeclarations(
    NoDeclarations(
    ) [NoDeclarations]
    VarDeclaration(
      SamoType(
       int
      ) [SamoType]
      VarElem(
        VarSingleElem(
         a
        ) [VarSingleElem]
      ) [VarElem]
    ) [VarDeclaration]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDeclaration(
      MethodReturnVoid(
       main
      ) [MethodReturnVoid]
      VList(
        VList(
          NoVarDecl(
          ) [NoVarDecl]
          VarDeclaration(
            SamoType(
             int
            ) [SamoType]
            VarElem(
              VarSingleElem(
               bodovi
              ) [VarSingleElem]
            ) [VarElem]
          ) [VarDeclaration]
        ) [VList]
        VarDeclaration(
          SamoType(
           bool
          ) [SamoType]
          VarElem(
            VarSingleElem(
             bt
            ) [VarSingleElem]
          ) [VarElem]
        ) [VarDeclaration]
      ) [VList]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              Assignment(
                DesignatorStatementAssign(
                  DesigSamo(
                   bodovi
                  ) [DesigSamo]
                  AssignOp(
                  ) [AssignOp]
                  ExprS(
                    TermFactL(
                      NumF(
                       0
                      ) [NumF]
                    ) [TermFactL]
                  ) [ExprS]
                ) [DesignatorStatementAssign]
              ) [Assignment]
            ) [Statements]
            Assignment(
              DesignatorStatementAssign(
                DesigNiz(
                 Nizovi
                 a
                ) [DesigNiz]
                AssignOp(
                ) [AssignOp]
                ExprS(
                  TermFactL(
                    CharF(
                     a
                    ) [CharF]
                  ) [TermFactL]
                ) [ExprS]
              ) [DesignatorStatementAssign]
            ) [Assignment]
          ) [Statements]
          Assignment(
            DesignatorStatementAssign(
              DesigSamo(
               a
              ) [DesigSamo]
              AssignOp(
              ) [AssignOp]
              ExprS(
                TermFactL(
                  NumF(
                   10
                  ) [NumF]
                ) [TermFactL]
              ) [ExprS]
            ) [DesignatorStatementAssign]
          ) [Assignment]
        ) [Statements]
        PrintStmtNum(
          ExprList(
            ExprS(
              TermFactL(
                FactDSingle(
                  DesigSamo(
                   a
                  ) [DesigSamo]
                ) [FactDSingle]
              ) [TermFactL]
            ) [ExprS]
            PlusOp(
            ) [PlusOp]
            TermFactL(
              NumF(
               2
              ) [NumF]
            ) [TermFactL]
          ) [ExprList]
          NumList(
           10
          ) [NumList]
        ) [PrintStmtNum]
      ) [Statements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  16:49:08,508 - ===================================
INFO  16:49:08,511 - Deklarisana konstanta imena nula na liniji 6
INFO  16:49:08,511 - Deklarisana konstanta imena jedan na liniji 7
INFO  16:49:08,512 - Deklarisana konstanta imena pet na liniji 8
INFO  16:49:08,512 - Deklarisana promenljiva nizovnog tipa niz u namespace-u na liniji 12
INFO  16:49:08,512 - Deklarisana promenljiva nizovnog tipa nizch u namespace-u na liniji 13
INFO  16:49:08,512 - Deklarisana promenljiva a u namespace-u na liniji 15
INFO  16:49:08,512 - Deklarisana promenljiva a str rs.etf.pp1.symboltable.concepts.Struct@1372ed45 na liniji 19
INFO  16:49:08,512 - Obradjuje se fja sa void povratnim tipom,  main na liniji 22
INFO  16:49:08,512 - Deklarisana promenljiva bodovi str rs.etf.pp1.symboltable.concepts.Struct@1372ed45 na liniji 23
INFO  16:49:08,513 - Deklarisana promenljiva bt str rs.etf.pp1.symboltable.concepts.Struct@6a79c292 na liniji 25
INFO  16:49:08,513 - Detektovano koriscenje lokalne promenljive Var bodovi: int, 0, 1  na liniji 27
INFO  16:49:08,514 - Pristup promenljivoj a iz namespace-a Nizovi na liniji 28
INFO  16:49:08,514 - Detektovano koriscenje globalne promenljive Var a: char, 2, 0  na liniji 29
ERROR 16:49:08,514 - Greska na liniji 29 nekompatibilni tipovi pri dodeli  na liniji 29
INFO  16:49:08,514 - Detektovano koriscenje globalne promenljive Var a: char, 2, 0  na liniji 30
ERROR 16:49:08,515 - Nekompatibilni tipovi u izrazu uz addop expression na liniji 30
ERROR 16:49:08,515 - Expr mora biti tipa int, char ili bool uz printStatement na liniji 30
INFO  16:49:08,515 -  doda se lepo
INFO  16:49:08,515 - ===================================
ERROR 16:49:08,515 - Parsiranje NIJE uspesno zavrseno!
