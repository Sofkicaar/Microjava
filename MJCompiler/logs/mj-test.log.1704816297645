INFO  17:04:43,528 - Compiling source file: C:\Users\Administrator\Desktop\njihovProjekat\workspace\MJCompiler\test\test301.mj
INFO  17:04:43,592 - #2 program
INFO  17:04:43,592 - #43 test301
INFO  17:04:43,592 - #48 namespace
INFO  17:04:43,593 - #43 Konstante
INFO  17:04:43,593 - #3 {
INFO  17:04:43,594 - #21 const
INFO  17:04:43,595 - #43 int
INFO  17:04:43,595 - #43 nula
INFO  17:04:43,595 - #11 =
INFO  17:04:43,596 - #40 0
INFO  17:04:43,596 - #5 ;
INFO  17:04:43,596 - #21 const
INFO  17:04:43,596 - #43 int
INFO  17:04:43,597 - #43 jedan
INFO  17:04:43,597 - #11 =
INFO  17:04:43,597 - #40 1
INFO  17:04:43,597 - #5 ;
INFO  17:04:43,598 - #21 const
INFO  17:04:43,598 - #43 int
INFO  17:04:43,598 - #43 pet
INFO  17:04:43,628 - #11 =
INFO  17:04:43,628 - #40 5
INFO  17:04:43,629 - #5 ;
INFO  17:04:43,629 - #4 }
INFO  17:04:43,630 - #48 namespace
INFO  17:04:43,630 - #43 Nizovi
INFO  17:04:43,631 - #3 {
INFO  17:04:43,631 - #43 int
INFO  17:04:43,631 - #43 niz
INFO  17:04:43,631 - #19 [
INFO  17:04:43,631 - #20 ]
INFO  17:04:43,631 - #5 ;
INFO  17:04:43,632 - #43 char
INFO  17:04:43,632 - #43 nizch
INFO  17:04:43,632 - #19 [
INFO  17:04:43,632 - #20 ]
INFO  17:04:43,632 - #5 ;
INFO  17:04:43,633 - #43 char
INFO  17:04:43,633 - #43 a
INFO  17:04:43,633 - #5 ;
INFO  17:04:43,633 - #43 char
INFO  17:04:43,633 - #43 a
INFO  17:04:43,634 - #5 ;
INFO  17:04:43,634 - #3 {
INFO  17:04:43,634 - #4 }
INFO  17:04:43,635 - #4 }
INFO  17:04:43,635 - #43 int
INFO  17:04:43,635 - #43 a
INFO  17:04:43,636 - #5 ;
INFO  17:04:43,636 - #3 {
INFO  17:04:43,636 - #12 void
INFO  17:04:43,636 - #43 main
INFO  17:04:43,636 - #6 (
INFO  17:04:43,636 - #7 )
INFO  17:04:43,637 - #43 int
INFO  17:04:43,638 - #43 bodovi
INFO  17:04:43,638 - #5 ;
INFO  17:04:43,638 - #43 bool
INFO  17:04:43,638 - #43 bt
INFO  17:04:43,638 - #5 ;
INFO  17:04:43,638 - #3 {
INFO  17:04:43,639 - #43 a
INFO  17:04:43,640 - #11 =
INFO  17:04:43,640 - #40 10
INFO  17:04:43,641 - #5 ;
INFO  17:04:43,642 - #4 }
INFO  17:04:43,642 - #4 }
INFO  17:04:43,654 - Program(
  ProgName(
   test301
  ) [ProgName]
  NameSpaceL(
    NameSpaceL(
      NoName(
      ) [NoName]
      NameSpaceSamo(
        NameSp(
         Konstante
        ) [NameSp]
        ConstDeclarations(
          ConstDeclarations(
            ConstDeclarations(
              NoDeclarations(
              ) [NoDeclarations]
              ConstDcl(
                SamoType(
                 int
                ) [SamoType]
                ConstElemSingle(
                  ConstElemm(
                   nula
                    NConst(
                     0
                    ) [NConst]
                  ) [ConstElemm]
                ) [ConstElemSingle]
              ) [ConstDcl]
            ) [ConstDeclarations]
            ConstDcl(
              SamoType(
               int
              ) [SamoType]
              ConstElemSingle(
                ConstElemm(
                 jedan
                  NConst(
                   1
                  ) [NConst]
                ) [ConstElemm]
              ) [ConstElemSingle]
            ) [ConstDcl]
          ) [ConstDeclarations]
          ConstDcl(
            SamoType(
             int
            ) [SamoType]
            ConstElemSingle(
              ConstElemm(
               pet
                NConst(
                 5
                ) [NConst]
              ) [ConstElemm]
            ) [ConstElemSingle]
          ) [ConstDcl]
        ) [ConstDeclarations]
        NoMtn(
        ) [NoMtn]
      ) [NameSpaceSamo]
    ) [NameSpaceL]
    NameSpaceSamo(
      NameSp(
       Nizovi
      ) [NameSp]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            VarDeclarations(
              NoDeclarations(
              ) [NoDeclarations]
              VarDeclaration(
                SamoType(
                 int
                ) [SamoType]
                VarElem(
                  VarArrayElem(
                   niz
                  ) [VarArrayElem]
                ) [VarElem]
              ) [VarDeclaration]
            ) [VarDeclarations]
            VarDeclaration(
              SamoType(
               char
              ) [SamoType]
              VarElem(
                VarArrayElem(
                 nizch
                ) [VarArrayElem]
              ) [VarElem]
            ) [VarDeclaration]
          ) [VarDeclarations]
          VarDeclaration(
            SamoType(
             char
            ) [SamoType]
            VarElem(
              VarSingleElem(
               a
              ) [VarSingleElem]
            ) [VarElem]
          ) [VarDeclaration]
        ) [VarDeclarations]
        VarDeclaration(
          SamoType(
           char
          ) [SamoType]
          VarElem(
            VarSingleElem(
             a
            ) [VarSingleElem]
          ) [VarElem]
        ) [VarDeclaration]
      ) [VarDeclarations]
      Mtn(
        NoMethodDecl(
        ) [NoMethodDecl]
      ) [Mtn]
    ) [NameSpaceSamo]
  ) [NameSpaceL]
  VarDeclarations(
    NoDeclarations(
    ) [NoDeclarations]
    VarDeclaration(
      SamoType(
       int
      ) [SamoType]
      VarElem(
        VarSingleElem(
         a
        ) [VarSingleElem]
      ) [VarElem]
    ) [VarDeclaration]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDeclaration(
      MethodReturnVoid(
       main
      ) [MethodReturnVoid]
      VList(
        VList(
          NoVarDecl(
          ) [NoVarDecl]
          VarDeclaration(
            SamoType(
             int
            ) [SamoType]
            VarElem(
              VarSingleElem(
               bodovi
              ) [VarSingleElem]
            ) [VarElem]
          ) [VarDeclaration]
        ) [VList]
        VarDeclaration(
          SamoType(
           bool
          ) [SamoType]
          VarElem(
            VarSingleElem(
             bt
            ) [VarSingleElem]
          ) [VarElem]
        ) [VarDeclaration]
      ) [VList]
      Statements(
        NoStmt(
        ) [NoStmt]
        Assignment(
          DesignatorStatementAssign(
            DesigSamo(
             a
            ) [DesigSamo]
            AssignOp(
            ) [AssignOp]
            ExprS(
              TermFactL(
                NumF(
                 10
                ) [NumF]
              ) [TermFactL]
            ) [ExprS]
          ) [DesignatorStatementAssign]
        ) [Assignment]
      ) [Statements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  17:04:43,654 - ===================================
INFO  17:04:43,659 - Deklarisana konstanta imena nula na liniji 6
INFO  17:04:43,660 - Deklarisana konstanta imena jedan na liniji 7
INFO  17:04:43,660 - Deklarisana konstanta imena pet na liniji 8
INFO  17:04:43,660 - Deklarisana promenljiva nizovnog tipa niz u namespace-u na liniji 12
INFO  17:04:43,660 - Deklarisana promenljiva nizovnog tipa nizch u namespace-u na liniji 13
INFO  17:04:43,660 - Deklarisana promenljiva a u namespace-u na liniji 14
ERROR 17:04:43,661 - Promenljiva a vec postoji u nejmu Nizovi na liniji 15
INFO  17:04:43,661 - Deklarisana promenljiva a str 1 na liniji 19
INFO  17:04:43,661 - Obradjuje se fja sa void povratnim tipom,  main na liniji 22
INFO  17:04:43,661 - Deklarisana promenljiva bodovi str 1 na liniji 23
INFO  17:04:43,661 - Deklarisana promenljiva bt str 5 na liniji 25
INFO  17:04:43,662 - Detektovano koriscenje globalne promenljive Var a: char, 2, 0  na liniji 28
ERROR 17:04:43,662 - Greska na liniji 28 nekompatibilni tipovi pri dodeli  na liniji 28
INFO  17:04:43,663 -  doda se lepo
INFO  17:04:43,663 - ===================================
ERROR 17:04:43,664 - Parsiranje NIJE uspesno zavrseno!
